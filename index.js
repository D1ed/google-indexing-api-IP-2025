const fs = require('fs');
const axios = require('axios');
const { google } = require('googleapis');

async function main() {
  // 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  const auth = new google.auth.GoogleAuth({
    keyFile: './service_account.json',
    scopes: ['https://www.googleapis.com/auth/indexing'],
  });

  // 2. –ó–∞–≥—Ä—É–∑–∫–∞ URL
  const urls = fs.readFileSync('./urls.txt', 'utf-8')
    .split('\n')
    .map(url => url.trim())
    .filter(url => url.length > 0);

  try {
    // 3. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ –∏ —Ç–æ–∫–µ–Ω–∞
    const client = await auth.getClient();
    const token = (await client.getAccessToken()).token;

    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞. –ù–∞—á–∏–Ω–∞—é –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞–ø—Ä–æ—Å–æ–≤...');

    // 4. –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
    for (const url of urls) {
      try {
        await axios.post(
          'https://indexing.googleapis.com/v3/urlNotifications:publish',
          {
            url: url,
            type: 'URL_UPDATED'
          },
          {
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${token}`
            }
          }
        );
        console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ: ${url}`);
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è ${url}:`, error.response?.data || error.message);
      }
    }

    console.log('‚úÖ –ì–æ—Ç–æ–≤–æ. –í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã.');
  } catch (err) {
    console.error('üö´ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', err);
  }
}

main();
